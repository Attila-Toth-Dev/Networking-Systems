<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAAgACADAREAAhEBAxEB/8QA
        GQAAAgMBAAAAAAAAAAAAAAAABQYBAggH/8QAKxAAAgICAQMDAQkBAAAAAAAAAQIDBAURBgASIQcVMQgT
        FiIjMkFRUoFh/8QAGwEAAgIDAQAAAAAAAAAAAAAABAcFBgABCAL/xAArEQACAQQBAwMDBQEBAAAAAAAB
        AhEDBAUhAAYSMUFRYRMUIgcygaGxcZH/2gAMAwEAAhEDEQA/AMm+6H+3WczkNlgo2zgDrRIAk82qliFU
        STy73J1rS25mlgSIbCmvIWb/AHWlH/SeoWvmV+4S2tgGJ8nuAA/uSf44w8X0IGxVfLZio9EICVQUnZ2P
        pJICqpPqT43yXuXIY0ks1Z4Vk/S0kZUMdftv56kaF9bXLmnRqBiPIBmOVPIdP5XFUEub+3emj6UspAOp
        1PxxVoNkcrOKuLo2bkxIUJBEXOz8b18f71u5vLeyT6lw4UfJA4FZ4+6yNQUrSmzt4hQT5/zj+vHE9Mqc
        HJ+fVZJLU5ZMfShXvVJQN7kf9Ib+PnXn5PS/u85U6uqnHYhu2mNuxMEifQeY/wB+OOjB4K1/TVFz3UCf
        UrmRSpqJCtEyx8A+3mNkSfDpx3P0L/FcfleXVfbpcm0qCNoHKOinRfWjpNFds2h56pOTx1S1yFW3x7fU
        FONyJk+npLTOhvjmwfXqZDDUbrNp9Jq3cO0qSCAYnwYWCJLa3xD5pg8dS9zk++lZFxFhqtGhMwYsnYrM
        iEHu2CxXZGvwgb8dXjprKVw1JVtCTVAZ3HvJAJnUECdH1mOJj9QMba3iVmfJALbMVpUm2IgMVWDMgkrJ
        B0ACdccvp4znpZ9yaFzM5OLH5jF3bJmjMrIJ3ZWKSMB4fUYKjewpOtbYdVLr+2zT5SotFS9J1WDAMAEA
        ge35bPqR8A89dAZbD2mMpGq3ZVps07I7iQYJ94XQnQ/6RztOR5Z6f168D2cpDPLapxX6lRY++ewjt2II
        o/lnLfh7R5B+ddLihjcm7sEQgKxVmmFUgSZPoI3PjjIr9V49UBdwSQGAiSZMCB6mdR54MvQU8nJb5lyL
        G2sRxXj9CwHbI12gktNIoEh+zbTCNVHaAQO5m8fA2ZRapbhLC0cVLiqy/sPcFg/jsa7idmPAG/PI+4y6
        Xbte3SlLekrD8hBbuENo77QNfJPwOYPt5Ws92xLTDiB5XaL7Q7cIWJXuP7nWt9dU26ulFFqfuAEx4mNx
        zlm4dKlZ3TwSYnzE6nlvTb115h6WPbXjhxtitdH59TI0ksQs2tdwB8qdePBG/G99QWf6WsOowpu+4Mvh
        lYqfeNaP8jXpySxWcu8P3C3ghvIYAjhO/wDU76rXchPlIM7Ux9izOtl2pY2vERKAQHU9hKnTN5B35P8A
        J6Do9C4SlSWi1MuoEfk7HXsdwRof+DhNTqnJ1HNQOFJM6UDfv44O5V9QfqvzfBtxvlXOb+QxrurvBIEU
        OVOx3FVBYA+dE66LxvSGExFz93ZW6pUHgidT7STHB7zqHJ5Cj9vc1iye2v7gcR/dB/bqychuf//Z
</value>
  </data>
</root>